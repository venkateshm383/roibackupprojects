<?xml version="1.0" encoding="UTF-8"?>

<EventFramework xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="eventframework.xsd"
	xmlns:dis="http://getusroi.com/internalevents/Dispatcher">

	<DispatchChanels>

		<DispatchChanel id="FILE_STORE" description="file store" isEnabled="true">
			<ChanelImplementation fqcn="com.getusroi.eventframework.dispatcher.chanel.FileStoreDispatchChanel" beanRefid="fileStoreDispatcher" />
			<ChanelConfiguration>
				{"filepath":"/home/bizruntime/LogDispatcher","filename":"LogDispatchChanel.txt"}
			</ChanelConfiguration>
		</DispatchChanel>

		<DispatchChanel id="EVT_FILE_STORE" description="event file store" isEnabled="true">
			<ChanelImplementation fqcn="com.getusroi.eventframework.dispatcher.chanel.FileStoreDispatchChanel" beanRefid="fileEventStoreDispatcher" />
			<ChanelConfiguration>
				{"filepath":"/home/bizruntime/LogDispatcher","filename":"EventDispatchChanel.txt"}
			</ChanelConfiguration>
		</DispatchChanel>
		
	</DispatchChanels>

	<SystemEvents>
		<SystemEvent id="SERVICE_COMPLETION_FAILURE" description="Standard Event for failure of every service Type" isEnabled="true">
			<CamelSystemEventBuilder fqcn="com.getusroi.eventframework.camel.eventproducer.ServiceCompletionFailureEventBuilder" beanRefid="ServiceEventBuilder" />
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
		
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</SystemEvent>

		<SystemEvent id="SERVICE_COMPLETION_SUCCESS" description="Standard Event for sucess of every service Type" isEnabled="true">
			<CamelSystemEventBuilder fqcn="com.getusroi.eventframework.camel.eventproducer.ServiceCompletionSuccessEventBuilder" beanRefid="ServiceEventBuilder" />
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="JSON"/>

				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</SystemEvent>
	</SystemEvents>
	
	<Events>
	<Event id="WORKORDER_PROCESSED" type="internal" description="work order processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the work order number -->
		<Event id="WORKORDER_NUMBER_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		<!-- work order update request change the  trade -->
		<Event id="WORKORDER_TRADE_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  status -->
		<Event id="WORKORDER_STATUS_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  schedule date time change -->
		<Event id="WORKORDER_NEWSCHEDULE_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  purchase order -->
		<Event id="WORKORDER_PURCHASEORDER_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  provider -->
		<Event id="WORKORDER_PROVIDER_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  provider -->
		<Event id="WORKORDER_PROBLEMDESCRIPTION_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  priority -->
		<Event id="WORKORDER_PRIORITY_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  NTE -->
		<Event id="WORKORDER_NTE_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- work order update request change the  Note added -->
		<Event id="WORKORDER_NOTEADDED_CHANGED_EVENT" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>			
			<EventPipeline enabled="true"/>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<!-- These event should be generated from SAC TO SC, but we don't know how the xml will come 
			<Event id="NOTIFICATION_PROCESSED" type="internal" description="NOTIFCAION processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="notification" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		
		<Event id="SCNOTIFICATIOSERVICE_PROCESSED" type="internal" description="SCNotificationService processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="scNotificationService" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>		
		
			<Event id="NOTESERVICE_PROCESSED" type="internal" description="NOTESERVICE processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="noteService" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
		<Event id="SMLISTNEWSERVICEREQUEST_PROCESSED" type="internal" description="SMListNewServiceRequest processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="SMListNewServiceRequest" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
			<Event id="SMCREATECALL_PROCESSED" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="SMCreateServiceCall" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		
			<Event id="SMLISTEDITSERVICER_PROCESSED" type="internal" description="SMCreateServiceCall processed" isEnabled="true">
			<EventParams>
				<EventParam name="tenant" dataType="string" validationRegEx="" />
				<EventParam name="site" dataType="string" validationRegEx="" />
			</EventParams>
			<CamelEventProducer>
				<CamelProducerConfig serviceName="SMCreateServiceCall" feature="sac" component="" raiseOn="success" />
				<CamelEventBuilder type='OGNL'>
					<OGNLMapping>
						<Source from="CamelExchange">
							<EventMapping destination="eventParam['tenant']" source="In.headers['meshHeader'].tenant" />
							<EventMapping destination="eventParam['site']"    source="In.headers['meshHeader'].site" />
						</Source>
					</OGNLMapping>
				</CamelEventBuilder>
			</CamelEventProducer>
			<dis:EventDispatchers>
				<dis:EventDispatcher>
					<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
					<dis:EventTransformation Type="JSON"/>
				</dis:EventDispatcher>
			</dis:EventDispatchers>
		</Event>
		-->
		</Events>
		
		
</EventFramework>